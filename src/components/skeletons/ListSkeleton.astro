---
interface Props {
  items?: number;
  class?: string;
}

const { items = 3, class: className = '' } = Astro.props;
---

<div class={`list-skeleton ${className}`}>
  {Array.from({ length: items }).map(() => (
    <div class="list-item-skeleton animate-pulse">
      <div class="skeleton-avatar"></div>
      <div class="skeleton-content">
        <div class="skeleton-title"></div>
        <div class="skeleton-subtitle"></div>
        <div class="skeleton-text"></div>
      </div>
    </div>
  ))}
</div>

<style>
  .list-skeleton {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .list-item-skeleton {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  }
  
  .skeleton-avatar {
    width: 48px;
    height: 48px;
    background: #e2e8f0;
    border-radius: 50%;
    flex-shrink: 0;
  }
  
  .skeleton-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .skeleton-title {
    height: 1.25rem;
    background: #e2e8f0;
    border-radius: 4px;
    width: 60%;
  }
  
  .skeleton-subtitle {
    height: 1rem;
    background: #e2e8f0;
    border-radius: 4px;
    width: 40%;
  }
  
  .skeleton-text {
    height: 0.875rem;
    background: #e2e8f0;
    border-radius: 4px;
    width: 80%;
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
</style>
