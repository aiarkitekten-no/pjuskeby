---
/* Pjuskeby Guardrails:
   - Ingen placeholders. Ingen ubrukte exports.
   - Følg koblinger.json for datakilder og relasjoner.
   - All skriving til DB/FS logges i donetoday.json.
   - Ved AI-generering: aldri publiser direkte; legg i drafts/.
   - Ved valideringsfeil: returner 422, ikke "tøm felt".
*/

import BaseLayout from '../../layouts/BaseLayout.astro';
import { readFile } from 'fs/promises';
import { join } from 'path';
import { existsSync } from 'fs';

// In SSR mode, fetch data directly from the slug
const { slug } = Astro.params;

const peopleData = JSON.parse(
  await readFile(join(process.cwd(), 'content/data/people.normalized.json'), 'utf-8')
);

const person = peopleData.find((p: any) => p.slug === slug);

if (!person) {
  return Astro.redirect('/404');
}

// Try to load extended data if it exists
let extendedData: any = {};
try {
  const extendedPath = join(process.cwd(), `content/data/${slug}-extended.json`);
  if (existsSync(extendedPath)) {
    extendedData = JSON.parse(await readFile(extendedPath, 'utf-8'));
  }
} catch (e) {
  // No extended data, use basic data only
}

// Merge extended data with person data
const fullPerson = { ...person, ...extendedData };

// Calculate age from birthdate if available
if (fullPerson.birthdate) {
  const birthDate = new Date(fullPerson.birthdate);
  const today = new Date();
  let age = today.getFullYear() - birthDate.getFullYear();
  const monthDiff = today.getMonth() - birthDate.getMonth();
  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
    age--;
  }
  fullPerson.calculatedAge = age;
}
---

<BaseLayout title={person.name} description={person.bio || `Meet ${person.name} from Pjuskeby`}>
  <style>
    .profile-container {
      max-width: 1000px;
      margin: 0 auto;
    }
    
    .profile-header {
      position: relative;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      height: 280px;
      border-radius: 16px;
      margin-bottom: -100px;
      box-shadow: 0 10px 40px rgba(102, 126, 234, 0.3);
      overflow: hidden;
    }
    
    .profile-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg width="100" height="100" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse"><path d="M 40 0 L 0 0 0 40" fill="none" stroke="white" stroke-width="0.5" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
      opacity: 0.3;
    }
    
    .profile-content {
      position: relative;
      z-index: 1;
      padding: 0 2rem;
    }
    
    .profile-avatar-container {
      display: flex;
      align-items: flex-end;
      gap: 2rem;
      margin-bottom: 2rem;
    }
    
    .profile-avatar {
      position: relative;
      width: 200px;
      height: 200px;
      border-radius: 50%;
      border: 6px solid white;
      box-shadow: 0 10px 40px rgba(0,0,0,0.2);
      overflow: hidden;
      background: white;
      flex-shrink: 0;
    }
    
    .profile-avatar img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .profile-avatar::after {
      content: '🎨';
      position: absolute;
      bottom: 10px;
      right: 10px;
      background: white;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 20px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.15);
    }
    
    .profile-info {
      flex: 1;
      padding-bottom: 1rem;
    }
    
    .profile-name {
      font-size: 3rem;
      font-weight: 800;
      color: #1e293b;
      margin: 0 0 0.5rem 0;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.05);
    }
    
    .profile-meta {
      display: flex;
      gap: 2rem;
      flex-wrap: wrap;
      color: #64748b;
      font-size: 1.1rem;
    }
    
    .profile-meta-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .profile-meta-item strong {
      color: #3b82f6;
      font-weight: 600;
    }
    
    .profile-grid {
      display: grid;
      grid-template-columns: 2fr 1fr;
      gap: 1.5rem;
      margin-top: 2rem;
    }
    
    @media (max-width: 768px) {
      .profile-grid {
        grid-template-columns: 1fr;
      }
      .profile-avatar-container {
        flex-direction: column;
        align-items: center;
        text-align: center;
      }
      .profile-name {
        font-size: 2rem;
      }
    }
    
    .card {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 20px rgba(0,0,0,0.08);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .card:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 30px rgba(0,0,0,0.12);
    }
    
    .card-title {
      font-size: 1.5rem;
      font-weight: 700;
      color: #1e293b;
      margin: 0 0 1.5rem 0;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .bio-text {
      font-size: 1.2rem;
      line-height: 1.8;
      color: #475569;
      font-style: italic;
      position: relative;
      padding-left: 1.5rem;
      border-left: 4px solid #3b82f6;
    }
    
    .traits-grid {
      display: grid;
      gap: 1rem;
    }
    
    .trait-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: linear-gradient(135deg, #e0f2fe 0%, #dbeafe 100%);
      border-radius: 12px;
      border-left: 4px solid #3b82f6;
      transition: transform 0.2s ease;
    }
    
    .trait-item:hover {
      transform: translateX(8px);
    }
    
    .trait-icon {
      font-size: 2rem;
      flex-shrink: 0;
    }
    
    .trait-text {
      font-size: 1.1rem;
      color: #0369a1;
      font-weight: 600;
    }
    
    .info-card {
      background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
      border-radius: 16px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      border: 2px solid #fbbf24;
    }
    
    .info-card-title {
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      color: #92400e;
      margin: 0 0 0.5rem 0;
      font-weight: 600;
    }
    
    .info-card-value {
      font-size: 1.3rem;
      color: #78350f;
      font-weight: 700;
    }
    
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }
    
    .stat-card {
      text-align: center;
      padding: 1.5rem;
      background: white;
      border-radius: 12px;
      border: 2px solid #e2e8f0;
      transition: all 0.3s ease;
    }
    
    .stat-card:hover {
      border-color: #3b82f6;
      transform: scale(1.05);
    }
    
    .stat-value {
      font-size: 2rem;
      font-weight: 800;
      color: #3b82f6;
      margin: 0;
    }
    
    .stat-label {
      font-size: 0.9rem;
      color: #64748b;
      margin-top: 0.5rem;
    }
    
    .quote-card {
      background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
      border-radius: 16px;
      padding: 2rem;
      border-left: 6px solid #3b82f6;
      position: relative;
      overflow: hidden;
    }
    
    .quote-card::before {
      content: '"';
      position: absolute;
      top: -20px;
      left: 20px;
      font-size: 120px;
      color: #3b82f6;
      opacity: 0.1;
      font-family: Georgia, serif;
    }
    
    .quote-text {
      font-size: 1.3rem;
      line-height: 1.8;
      color: #1e293b;
      position: relative;
      z-index: 1;
    }
    
    .agatha-signature {
      text-align: center;
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 2px solid #e2e8f0;
      color: #64748b;
      font-size: 0.9rem;
      font-style: italic;
    }
    
    .back-button {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: #3b82f6;
      text-decoration: none;
      font-weight: 600;
      padding: 0.75rem 1.5rem;
      background: white;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      transition: all 0.3s ease;
      margin-top: 2rem;
    }
    
    .back-button:hover {
      transform: translateX(-8px);
      box-shadow: 0 4px 16px rgba(59, 130, 246, 0.2);
    }
  </style>

  <div class="profile-container">
    <!-- Header Banner -->
    <div class="profile-header"></div>
    
    <!-- Profile Content -->
    <div class="profile-content">
      <!-- Avatar & Name -->
      <div class="profile-avatar-container">
        <div class="profile-avatar">
          <img loading="lazy" 
            src={`/assets/agatha/person/${person.slug}.png`}
            alt={`Portrait of ${person.name}`}
            onerror="this.src='data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 width=%22200%22 height=%22200%22><rect fill=%22%23e2e8f0%22 width=%22200%22 height=%22200%22/><text x=%2250%25%22 y=%2250%25%22 dominant-baseline=%22middle%22 text-anchor=%22middle%22 font-size=%2260%22>👤</text></svg>'"
          />
        </div>
        
        <div class="profile-info">
          <h1 class="profile-name">{fullPerson.name}</h1>
          <p style="font-size: 1.4rem; color: white; font-weight: 700; margin: 0 0 1.5rem 0; text-shadow: 2px 2px 8px rgba(0,0,0,0.3); letter-spacing: 0.5px;">
            {fullPerson.workplace?.role || fullPerson.occupation}
          </p>
          <div class="profile-meta">
            <div class="profile-meta-item">
              <span>🎂</span>
              <span><strong>{fullPerson.calculatedAge || fullPerson.age}</strong> years old{fullPerson.birthdate && ` (${new Date(fullPerson.birthdate).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' })})`}</span>
            </div>
            <div class="profile-meta-item">
              <span>💼</span>
              <span><strong>{fullPerson.workplace?.name || fullPerson.occupation}</strong></span>
            </div>
            {fullPerson.address && (
              <div class="profile-meta-item">
                <span>🏠</span>
                <span><strong>{fullPerson.address.full}</strong></span>
              </div>
            )}
            <div class="profile-meta-item">
              <span>📍</span>
              <span><strong>Pjuskeby</strong></span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Main Grid -->
      <div class="profile-grid">
        <!-- Left Column -->
        <div>
          <!-- Short Bio Quote -->
          {fullPerson.bio_short && (
            <div class="card">
              <h2 class="card-title">
                <span>💭</span>
                Known for
              </h2>
              <div class="quote-card">
                <p class="quote-text">{fullPerson.bio_short}</p>
              </div>
              <div class="agatha-signature">
                — As observed by Agatha Splint
              </div>
            </div>
          )}
          
          <!-- Full Biography -->
          {fullPerson.bio_full && (
            <div class="card" style="margin-top: 1.5rem;">
              <h2 class="card-title">
                <span>📖</span>
                The Full Story of {fullPerson.name}
              </h2>
              <div style="line-height: 1.9; color: #475569; font-size: 1.05rem;">
                {fullPerson.bio_full.split('\n\n').map((paragraph: string) => (
                  <p style="margin-bottom: 1.5rem; text-align: justify;">
                    {paragraph.startsWith('**') && paragraph.endsWith('**') ? (
                      <strong style="display: block; font-size: 1.2rem; color: #1e293b; margin: 2rem 0 1rem 0;">
                        {paragraph.slice(2, -2)}
                      </strong>
                    ) : paragraph.startsWith('- ') ? (
                      <span style="display: block; padding-left: 1.5rem; position: relative;">
                        <span style="position: absolute; left: 0;">•</span>
                        {paragraph.slice(2)}
                      </span>
                    ) : (
                      paragraph
                    )}
                  </p>
                ))}
              </div>
              <div class="agatha-signature">
                — From Agatha Splint's detailed observations
              </div>
            </div>
          )}
          
          <!-- Hobbies & Interests -->
          {fullPerson.traits && fullPerson.traits.length > 0 && (
            <div class="card" style="margin-top: 1.5rem;">
              <h2 class="card-title">
                <span>✨</span>
                Hobbies & Passions
              </h2>
              <div class="traits-grid">
                {fullPerson.traits.map((trait: string) => (
                  <div class="trait-item">
                    <span class="trait-icon">🎯</span>
                    <span class="trait-text">{trait}</span>
                  </div>
                ))}
              </div>
            </div>
          )}
          
          <!-- Favorite Places -->
          {fullPerson.favorites?.places && fullPerson.favorites.places.length > 0 && (
            <div class="card" style="margin-top: 1.5rem;">
              <h2 class="card-title">
                <span>❤️</span>
                Favorite Places
              </h2>
              <div style="display: flex; flex-direction: column; gap: 1rem;">
                {fullPerson.favorites.places.map((place: any) => (
                  <a 
                    href={`/steder/${place.slug}`}
                    style="text-decoration: none; color: inherit; display: block; padding: 1.25rem; background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%); border-radius: 12px; border-left: 4px solid #f59e0b; transition: transform 0.2s ease;"
                    onmouseover="this.style.transform='translateX(8px)'"
                    onmouseout="this.style.transform='translateX(0)'"
                  >
                    <div style="font-size: 1.1rem; font-weight: 600; color: #92400e; margin-bottom: 0.5rem;">
                      📍 {place.name}
                    </div>
                    <div style="font-size: 0.95rem; color: #78350f; font-style: italic;">
                      {place.reason}
                    </div>
                  </a>
                ))}
              </div>
            </div>
          )}
          
          <!-- Stories Section -->
          <div class="card" style="margin-top: 1.5rem;">
            <h2 class="card-title">
              <span>📖</span>
              Stories & Experiences
            </h2>
            <div id="stories-loading" style="text-align: center; padding: 2rem;">
              <p style="color: #64748b; font-size: 1.1rem;">
                🔍 Loading stories...
              </p>
            </div>
            <div id="stories-list" style="display: none;"></div>
            <div id="stories-empty" style="display: none; text-align: center; padding: 2rem;">
              <p style="color: #64748b; font-size: 1.1rem;">
                🌟 No stories about {fullPerson.name} yet...
              </p>
              <p style="color: #94a3b8; font-size: 0.9rem; margin-top: 1rem;">
                Agatha Splint is constantly noting new observations from Pjuskeby
              </p>
            </div>
          </div>
          
          <script define:vars={{slug, name: fullPerson.name}}>
            // Fetch stories mentioning this person
            fetch(`https://pjuskeby.org/api/entities/person/${slug}/stories`)
              .then(res => res.json())
              .then(data => {
                const loadingEl = document.getElementById('stories-loading');
                const listEl = document.getElementById('stories-list');
                const emptyEl = document.getElementById('stories-empty');
                
                if (loadingEl) loadingEl.style.display = 'none';
                
                if (data.stories && data.stories.length > 0) {
                  if (listEl) {
                    listEl.style.display = 'block';
                    listEl.innerHTML = data.stories.map(story => `
                      <a href="${story.url}" style="display: block; text-decoration: none; color: inherit; padding: 1.25rem; background: #f8fafc; border-radius: 12px; margin-bottom: 1rem; border-left: 4px solid #3b82f6; transition: all 0.2s ease;">
                        <div style="font-size: 1.1rem; font-weight: 600; color: #1e293b; margin-bottom: 0.5rem;">
                          ${story.title}
                        </div>
                        ${story.excerpt ? `
                          <p style="color: #64748b; font-size: 0.95rem; margin-bottom: 0.75rem; line-height: 1.6;">
                            ${story.excerpt}
                          </p>
                        ` : ''}
                        <div style="color: #94a3b8; font-size: 0.85rem;">
                          📅 ${new Date(story.publishedAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                        </div>
                      </a>
                    `).join('');
                  }
                } else {
                  if (emptyEl) emptyEl.style.display = 'block';
                }
              })
              .catch(err => {
                console.error('Failed to load stories:', err);
                const loadingEl = document.getElementById('stories-loading');
                const emptyEl = document.getElementById('stories-empty');
                if (loadingEl) loadingEl.style.display = 'none';
                if (emptyEl) emptyEl.style.display = 'block';
              });
          </script>
        </div>
        
        <!-- Right Column - Info Cards -->
        <div>
          <!-- Age Info -->
          <div class="info-card">
            <p class="info-card-title">Age</p>
            <p class="info-card-value">{fullPerson.calculatedAge || fullPerson.age} years old</p>
            {fullPerson.birthdate && (
              <p style="color: #92400e; font-size: 0.9rem; margin-top: 0.5rem;">
                🎂 Born {new Date(fullPerson.birthdate).toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' })}
              </p>
            )}
          </div>
          
          <!-- Address -->
          {fullPerson.address && (
            <div class="info-card" style="background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%); border-color: #3b82f6;">
              <p class="info-card-title" style="color: #1e40af;">Address</p>
              <p class="info-card-value" style="color: #1e3a8a;">{fullPerson.address.full}</p>
            </div>
          )}
          
          <!-- Workplace -->
          {fullPerson.workplace && (
            <div class="info-card" style="background: linear-gradient(135deg, #ddd6fe 0%, #c7d2fe 100%); border-color: #8b5cf6;">
              <p class="info-card-title" style="color: #5b21b6;">Workplace</p>
              <p class="info-card-value" style="color: #4c1d95;">
                <a href={`/bedrifter/${fullPerson.workplace.slug}`} style="color: inherit; text-decoration: none;">
                  {fullPerson.workplace.name}
                </a>
              </p>
              {fullPerson.workplace.role && (
                <p style="color: #6d28d9; font-size: 0.9rem; margin-top: 0.5rem;">
                  💼 {fullPerson.workplace.role}
                </p>
              )}
            </div>
          )}
          
          <!-- Stats -->
          <div class="card" style="margin-top: 1.5rem;">
            <h3 class="card-title" style="font-size: 1.2rem;">
              <span>📊</span>
              Statistics
            </h3>
            <div class="stats-grid">
              <div class="stat-card">
                <p class="stat-value">{fullPerson.traits?.length || 0}</p>
                <p class="stat-label">Hobbies</p>
              </div>
              <div class="stat-card">
                <p class="stat-value">{fullPerson.favorites?.places?.length || 0}</p>
                <p class="stat-label">Favorite Places</p>
              </div>
              <div class="stat-card">
                <p class="stat-value">{fullPerson.calculatedAge || fullPerson.age}</p>
                <p class="stat-label">Years Old</p>
              </div>
              <div class="stat-card">
                <p class="stat-value">∞</p>
                <p class="stat-label">Absurdity</p>
              </div>
            </div>
          </div>
          
          <!-- Fun Facts -->
          <div class="card" style="margin-top: 1.5rem; background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);">
            <h3 class="card-title" style="font-size: 1.2rem; color: #78350f;">
              <span>🎪</span>
              Fun Facts
            </h3>
            <ul style="list-style: none; padding: 0; margin: 0;">
              <li style="padding: 0.75rem 0; border-bottom: 1px solid #fbbf24;">
                <span style="color: #92400e;">🌟 First observed:</span>
                <span style="float: right; font-weight: 600; color: #78350f;">2025</span>
              </li>
              <li style="padding: 0.75rem 0; border-bottom: 1px solid #fbbf24;">
                <span style="color: #92400e;">🎭 Status:</span>
                <span style="float: right; font-weight: 600; color: #78350f;">Active</span>
              </li>
              <li style="padding: 0.75rem 0;">
                <span style="color: #92400e;">🎨 Portrayed by:</span>
                <span style="float: right; font-weight: 600; color: #78350f;">Agatha Splint</span>
              </li>
            </ul>
          </div>
        </div>
      </div>
      
      <!-- Back Button -->
      <a href="/personer" class="back-button">
        <span>←</span>
        <span>Back to all people</span>
      </a>
    </div>
  </div>
</BaseLayout>
